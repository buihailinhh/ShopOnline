@{
    ViewBag.Title = "Category API Demo";
    Layout = null;
}

<h2>Category List</h2>

<div class="form-group">
    <input type="text" id="searchTerm" class="form-control" placeholder="Tìm kiếm Category" />
    <button id="searchButton" class="btn btn-primary mt-2">Search</button>
</div>

<button id="loadCategories" class="btn btn-primary">Load Categories</button>
<a class="btn btn-success" href="~/Admin/AllCategory/Add">Thêm Category</a>

<table id="categoryTable" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>No.</th>
            <th>ID</th>
            <th>Name</th>
            <th>Description</th>
            <th>Create Date</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody id="categoryList">
        <!-- Các hàng sẽ được thêm vào đây bằng JavaScript -->
    </tbody>
</table>
   
<!-- Phân trang -->
<div id="paginationControls" class="pagination-controls">
    <button id="prevPage" class="btn btn-primary">Previous</button>
    <span> <span id="currentPage">1</span>/<span id="totalPages">1</span></span>
    <button id="nextPage" class="btn btn-primary">Next</button>
</div>




<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    // search

    $(document).ready(function () {
        // Function to search categories
        function searchCategories(searchTerm) {
            $.ajax({
                url: '/api/categories/search',
                type: 'GET',
                data: { searchTerm: searchTerm },
                success: function (response) {
                    if (Array.isArray(response)) {
                        $('#categoryList').empty();
                        response.forEach(function (category, index) {
                            $('#categoryList').append(
                                '<tr>' +
                                '<td>' + (index + 1) + '</td>' +
                                '<td>' + category.id + '</td>' +
                                '<td>' + category.name + '</td>' +
                                '<td>' + category.description + '</td>' +
                                '<td>' + new Date(category.createDate).toLocaleDateString() + '</td>' +
                                '<td><a href="/Admin/AllCategory/Edit/' + category.id + '" class="btn btn-warning">Edit</a></td>' +
                                '<td><button class="btn btn-danger btn-delete" data-id="' + category.id + '">Xóa</button></td>' +
                                '</tr>'
                            );
                        });
                    } else {
                        alert('No categories found.');
                    }
                },
                error: function (error) {
                    alert('Failed to search categories: ' + error.responseText);
                }
            });
        }

        // Search button click handler
        $('#searchButton').click(function () {
            var searchTerm = $('#searchTerm').val();
            searchCategories(searchTerm);
        });

        // Optional: Add a keypress handler to trigger search on Enter key
        $('#searchTerm').keypress(function (e) {
            if (e.which === 13) { // Enter key
                $('#searchButton').click();
            }
        });
    });


    // load va phan trang
    $(document).ready(function () {
        var currentPage = 1;
        var pageSize = 6;

        // Load categories with pagination
        function loadCategories(pageNumber, pageSize) {
            $.ajax({
                url: '/api/categories/allcategory', 
                type: 'GET',
                data: {
                    pageNumber: pageNumber, // Số trang hiện tại
                    pageSize: pageSize      // Kích thước trang (số lượng mục trên mỗi trang)
                },
                success: function (response) {
                    // Kiểm tra nếu response có chứa danh sách categories
                    if (response.categories && Array.isArray(response.categories)) {

                        // Làm sạch danh sách trước khi thêm
                        $('#categoryList').empty();

                        // Duyệt qua mảng các danh mục và thêm vào bảng
                        response.categories.forEach(function (category, index) {
                            $('#categoryList').append(
                                '<tr>' +
                                '<td>' + ((pageNumber - 1) * pageSize + index + 1) + '</td>' +  // Số thứ tự
                                '<td>' + category.id + '</td>' +
                                '<td>' + category.name + '</td>' +
                                '<td>' + category.description + '</td>' +
                                '<td>' + new Date(category.createDate).toLocaleDateString() + '</td>' + // Format ngày
                                '<td><a href="/Admin/AllCategory/Edit/' + category.id + '" class="btn btn-warning">Edit</a></td>' +
                                '<td><button class="btn btn-danger btn-delete" data-id="' + category.id + '">Xóa</button></td>' +
                                '</tr>'
                            );
                        });

                        // Tính toán số trang và cập nhật điều khiển phân trang
                        var totalPages = Math.ceil(response.totalItems / pageSize);
                        $('#currentPage').text(pageNumber);
                        $('#totalPages').text(totalPages);

                        // Kiểm tra xem nút Previous có cần bị vô hiệu hóa không
                        if (pageNumber <= 1) {
                            $('#prevPage').prop('disabled', true);
                        } else {
                            $('#prevPage').prop('disabled', false);
                        }

                        // Kiểm tra xem nút Next có cần bị vô hiệu hóa không
                        if (pageNumber >= totalPages) {
                            $('#nextPage').prop('disabled', true);
                        } else {
                            $('#nextPage').prop('disabled', false);
                        }
                    } else {
                        alert('No categories found.');
                    }
                },
                error: function (error) {
                    alert('Failed to load categories: ' + error.responseText);
                }
            });
        }

        // Xử lý sự kiện click nút Load Categories
        $('#loadCategories').click(function () {
            loadCategories(currentPage, pageSize);
        });

        // Xử lý sự kiện click nút Previous
        $('#prevPage').click(function () {
            if (currentPage > 1) {
                currentPage--;
                loadCategories(currentPage, pageSize);
            }
        });

        // Xử lý sự kiện click nút Next
        $('#nextPage').click(function () {
            currentPage++;
            loadCategories(currentPage, pageSize);
        });


    });


        // Delete category
        $(document).on('click', '.btn-delete', function () {
            var categoryId = $(this).data('id');
            $.ajax({
                url: '/api/categories/' + categoryId,
                type: 'DELETE',
                success: function (response) {
                    alert('Category deleted successfully!');
                    $('#loadCategories').click(); // Reload categories to remove the deleted one
                },
                error: function (error) {
                    alert('Failed to delete category: ' + error.responseText);
                }
            });
        });
   

    //phan trang

    //$(document).ready(function () {
    //    var currentPage = 1;
    //    var pageSize = 6;

    //    // Load categories with pagination
    //    function loadCategories(pageNumber, pageSize) {
    //        $.ajax({
    //            url: '/api/categories/pagination',  // API URL cho phân trang
    //            type: 'GET',
    //            data: {
    //                pageNumber: pageNumber,
    //                pageSize: pageSize
    //            },
    //            success: function (response) {
    //                if (response.categories && Array.isArray(response.categories)) {
    //                    // Làm sạch danh sách trước khi thêm
    //                    $('#categoryList').empty();

    //                    // Duyệt qua mảng các danh mục và thêm vào bảng
    //                    response.categories.forEach(function (category, index) {
    //                        $('#categoryList').append(
    //                            '<tr>' +
    //                            '<td>' + ((pageNumber - 1) * pageSize + index + 1) + '</td>' +  // Số thứ tự
    //                            '<td>' + category.id + '</td>' +
    //                            '<td>' + category.name + '</td>' +
    //                            '<td>' + category.description + '</td>' +
    //                            '<td>' + (category.createDate || category.CreateDate || category.create_date || category.Create_date) + '</td>' +
    //                            '<td><a href="/Admin/AllCategory/Edit/' + category.id + '" class="btn btn-warning">Edit</a></td>' +
    //                            '<td><button class="btn btn-danger btn-delete" data-id="' + category.id + '">Xóa</button></td>' +
    //                            '</tr>'
    //                        );
    //                    });

    //                    // Tính toán số trang và cập nhật điều khiển phân trang
    //                    var totalPages = Math.ceil(response.totalItems / pageSize);
    //                    $('#currentPage').text(pageNumber);
    //                    $('#totalPages').text(totalPages);

    //                    // Kích hoạt / vô hiệu hóa các nút phân trang dựa trên trang hiện tại
    //                    $('#prevPage').prop('disabled', pageNumber <= 1);
    //                    $('#nextPage').prop('disabled', pageNumber >= totalPages);
    //                } else {
    //                    alert('No categories found.');
    //                }
    //            },
    //            error: function (error) {
    //                alert('Failed to load categories: ' + error.responseText);
    //            }
    //        });
    //    }

    //    // Xử lý sự kiện click nút Load Categories
    //    $('#loadCategories').click(function () {
    //        loadCategories(currentPage, pageSize);
    //    });

    //    // Xử lý sự kiện click nút Previous
    //    $('#prevPage').click(function () {
    //        if (currentPage > 1) {
    //            currentPage--;
    //            loadCategories(currentPage, pageSize);
    //        }
    //    });

    //    // Xử lý sự kiện click nút Next
    //    $('#nextPage').click(function () {
    //        var totalPages = parseInt($('#totalPages').text(), 10);
    //        if (currentPage < totalPages) {
    //            currentPage++;
    //            loadCategories(currentPage, pageSize);
    //        }
    //    });
    //});






</script>


<style>
    /* Toàn bộ phần tử */

    a {
        text-decoration: none;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        color: #495057;
        margin: 0;
        padding: 20px;
    }

    /* Cải thiện nút */
    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.875rem;
        line-height: 1.5;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-success {
        background-color: #28a745;
        color: #fff;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .btn-warning {
        background-color: #ffc107;
        color: #212529;
    }

        .btn-warning:hover {
            background-color: #e0a800;
        }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    /* Bảng */
    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        .table thead {
            background-color: #343a40;
            color: #fff;
        }

        .table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .table tbody tr:hover {
            background-color: #e9ecef;
        }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }


    .pagination-controls {
        text-align: center;
    }

    .pagination-controls{
        margin-top: 20px
    }
</style>

